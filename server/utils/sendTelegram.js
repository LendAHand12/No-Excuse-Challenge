import axios from "axios";
import moment from "moment";

const TELEGRAM_BOT_TOKEN = process.env.TELE_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELE_CHAT_ID;

export const sendTelegramMessage = async ({ userName }) => {
  const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;

  const now = new Date();
  const formatted = moment(now).format("YYYY-MM-DD HH:mm");

  const message = `
      <b>üîî Th√¥ng b√°o c√≥ y√™u c·∫ßu r√∫t ti·ªÅn</b>\n
      <b>T√™n ng∆∞·ªùi d√πng:</b> ${userName}\n
      <b>Th·ªùi gian:</b> ${formatted}\n
      <b>Chi ti·∫øt:</b> <a href="${process.env.FRONTEND_BASE_URL}/admin/withdraw">Xem chi ti·∫øt</a>
      `;
  try {
    const agent = new https.Agent({
      rejectUnauthorized: false, // th·ª≠ b·ªè verify TLS (debug)
      keepAlive: true,           // gi·ªØ k·∫øt n·ªëi
      timeout: 5000              // set timeout r√µ r√†ng
    });

    const response = await axios.post(url, {
      chat_id: TELEGRAM_CHAT_ID,
      text: message,
      parse_mode: "HTML", // Markdown
    }, { httpsAgent: agent });
    console.log("‚úÖ Message sent to Telegram", response.data);
  } catch (error) {
    if (error.response) {
      // L·ªói tr·∫£ v·ªÅ t·ª´ server (Telegram API)
      console.error("‚ùå Telegram API error:");
      console.error("Status:", error.response.status);
      console.error("Data:", error.response.data);
    } else if (error.request) {
      // Request ƒë√£ g·ª≠i nh∆∞ng kh√¥ng nh·∫≠n ƒë∆∞·ª£c response
      console.error("‚ùå No response from Telegram API. Request:", error.request);
    } else {
      // L·ªói kh√°c (c√≥ th·ªÉ l√† l·ªói c·∫•u h√¨nh)
      console.error("‚ùå Unknown error:", error.message);
    }
  }
};
